const SMALL_CASE_ALPHABETS = 'qwertyuiopasdfghjklzxcvbnm';
const BIG_CASE_ALPHABETS = 'QWERTYUIOPASDFGHJKLZXCVBNM';
const NUMBERS = '1234567890';
const SYMBOLS = '`~!@#$%^&*()_+-=[]\ {}|;:",./<>?\'';
const ALL_CHARACTERS = [SMALL_CASE_ALPHABETS, BIG_CASE_ALPHABETS, NUMBERS, SYMBOLS];

const getInput = (message) => prompt(message.join('\n'));

const clearScreen = function () {
  console.clear();
};

const getChoice = function () {
  const message = [
    'You can either decrypt or encrypt a script based on the KEY.',
    'Select an option : \n 1. Encrypt\n 2. Decrypt'
  ];
  const option = +getInput(message);

  clearScreen();

  if (option !== 1 && option !== 2) {
    console.log('Indvalid option..ðŸ™‚');
    getChoice();
  }

  return option;
};

function getEncryptOrDecrypt() {
  const choice = getChoice();

  if (choice === 1) {
    return 'encrypt';
  }

  return 'decrypt';
}

function areSameCharsFound(character, key, index) {
  for (let currentIndex = index; currentIndex < key.length; currentIndex += 2) {
    if (character === key[currentIndex]) {
      return true;
    }
  }

  return false;
}

function isCharacterEncrypted(character, key) {
  return areSameCharsFound(character, key, 0);
}

function getRandomNumBetween(to, from) {
  return from + Math.ceil(Math.random() * (to - from));
}

function getRandomCharFromString(string) {
  return string[getRandomNumBetween(0, string.length - 1)];
}

function getRandomChar() {
  const randomNumberForChar = getRandomNumBetween(0, 3);
  const string = ALL_CHARACTERS[randomNumberForChar];

  return getRandomCharFromString(string);
}

function isEncryptedCharUsed(character, key) {
  for (let index = 1; index < key.length; index += 2) {
    if (character === key[index]) {
      return true;
    }
  }

  return false;
}

function getEncryptedCharacter(character, key) {
  const randomChar = getRandomChar();

  if (isEncryptedCharUsed(randomChar, key)) {
    return getEncryptedCharacter(character, key);
  }

  return randomChar;
}

function getKeyFromComputer(text) {
  let key = '';

  for (const character of text) {
    if (!isCharacterEncrypted(character, key)) {
      key += character + getEncryptedCharacter(character, key);
    }
  }

  return key;
}

function convertText(key, text) {
  let convertedText = text;

  for (let index = 0; index < key.length; index += 2) {
    convertedText = convertedText.replaceAll(key[index], key[index + 1]);
  }

  return convertedText;
}

function isKeyValid(key) {
  if (key === '') {
    console.log("Indvalid KEY..ðŸ™‚");

    return false;
  }

  for (let index = 1; index < key.length; index += 2) {
    if (areSameCharsFound(key[index], key, index + 2)) {
      console.log("Indvalid KEY..ðŸ™‚");

      return false;
    }
  }

  return true;
}

function getKeyFromUser(text) {
  const message = [
    "The KEY should follow this format.The character followed by to which it is encrypted as",
    " â•­â•®â•­â•®â•­â•®â•­â•®â•­â•®â•­â•®\n Tih&i@n g-s; \n",
    "Enter / Paste the KEY here : "
  ];
  const key = getInput(message);

  if (!isKeyValid(key)) {
    getKeyFromUser(text);
  }

  return key;
}

function getKeyGenerationOption() {
  const message = [
    'Select an option for the KEY : \n',
    ' 1.User had a KEY\n 2.Let Computer generate a KEY'
  ];
  const option = +getInput(message);

  if (option !== 1 && option !== 2) {
    clearScreen();
    console.log('Enter a Valid option..ðŸ™‚ ');
    getKeyGenerationOption();
  }

  return option;
}

function getKeyToEncrypt(text) {
  const keyChoice = getKeyGenerationOption();

  if (keyChoice === 1) {
    return getKeyFromUser(text);
  }

  const key = getKeyFromComputer(text);
  console.log("\n\nThe KEY generated by Computer :", key);
  return key;
}

function reverse(string) {
  return string.split('').reverse().join('');
}

function getKey(text, encryptOrDecrypt) {
  if (encryptOrDecrypt === 'encrypt') {
    return getKeyToEncrypt(text);
  }

  if (encryptOrDecrypt === 'decrypt') {
    return reverse(getKeyFromUser(text));
  }
}

function getTextToEncryptDecrypt(encryptOrDecrypt) {
  const message = ['Enter / Paste text here that you want to ' + encryptOrDecrypt + ' :'];
  const text = getInput(message);

  if (text === '') {
    clearScreen();
    console.log('ANYTHING is better than NOTHING. Please enter any text..ðŸ™‚ \n');

    getTextToEncryptDecrypt(encryptOrDecrypt);
  }

  return text;
}

function displayProcessResult(encryptOrDecrypt, convertedText) {
  console.log("The " + encryptOrDecrypt + "ed text :", convertedText, "\n\n");
}

function cryptographicTransform() {
  clearScreen();

  const encryptOrDecrypt = getEncryptOrDecrypt();
  const text = getTextToEncryptDecrypt(encryptOrDecrypt);
  const key = getKey(text, encryptOrDecrypt);
  const convertedText = convertText(key, text);

  displayProcessResult(encryptOrDecrypt, convertedText);
}

cryptographicTransform();
